---
# Lvlab.yml uses a list of environments so that in the future we can
# add a feature allowing us to manage multiple development environments
# from the same configuration file.
environment:
  #
  # name:
  #   The name of your environment. This will become a subdirectory under
  #   your disk_image_base_dir and will contain directories for each
  #   machine defined in the environment.
  - name: lvlab-example
    #
    # libvirt_uri:
    # qemu:///system is the "root" session of libvirt and with most default
    # libvirt installs requires a non-root user to be a member of the libvirt
    # group to use it without sudo.
    #
    # qemu:///session is the rootless user session. Sometimes good enough but
    # can suffer from network performance issues in some testing scenarios.
    libvirt_uri: qemu:///system
    #
    # config_defaults:
    #   This configuration object will be merged into other configuration
    #   objects, such as the machine object, to fill in missing but required
    #   variable values. This allows one to be a little more breif when
    #   defining similar machines.
    config_defaults:
      domain: local
      os: debian12
      cpu: 2
      memory: 2048
      disks:
        - name: primary
          size: 25G
      # Each interface on a machine merges with these default settings
      interfaces:
        #
        # network:
        #   The network configuration element is the name of the libvirt
        #   network to use for the interface when creating the machine.
        network: default
        nameservers:
          search: [local]
          addresses: [192.168.122.1]
      # To Run rootless using qemu:///system wieth libvirt group membership
      # these directories need to be writable by your user.
      #
      # cloud_image_basedir: /var/lib/libvirt/images/lvlab
      # disk_image_basedir: /var/lib/libvirt/images/lvlab
      #
      # Shared directories create mount-points of host directories inside
      # the running virtual machine. This is helpful for mounting code or
      # configuration files inside the machine. It requires mounting of
      # the configured shared directory manually or via /etc/fstab.
      # shared_directories:
      #   # mount -t virtiofs gitrepos /srv/git
      #   - source: /home/memblin/repos
      #     mount_tag: gitrepos
      #
      # cloud_init setting to be merged with each machines cloud-init settings
      cloud_init:
        user: root
        pubkey: ~/.ssh/id_ed25519.pub
        sudo: ["ALL=(ALL) NOPASSWD:ALL"]
        shell: /bin/bash
        # The runcmd section from config_defaults:cloud_init will run on all
        # machines that don't set cloud_init:runcmd_ignore_defaults: true
        runcmd:
          - curl --insecure https://vault.tkclabs.io:8200/v1/root_ca/ca/pem > /etc/pki/ca-trust/source/anchors/vault.tkclabs.io.crt
          - curl -s -o /root/bootstrap-salt.sh -L https://bootstrap.saltproject.io
          - chmod 0755 /root/bootstrap-salt.sh
          - /root/bootstrap-salt.sh -X -A 192.168.122.12 stable 3007
          - |
            cat << EOF > /etc/salt/minion.d/cloud_init_customization.conf
            # This reduces latency for some salt operations when reverse
            # DNS is not in place for the machine.
            enable_fqdns_grains: False

            EOF
          - systemctl enable --now salt-minion

    # machines:
    #  This is the configuration object that contains the definition
    #  for all of the machines in the environment.
    machines:
      #
      # vm_name:
      #   This is the value used as the name of the VM for creating it's
      #   directory, and the name as defined in Libvirt.
      - vm_name: salt.local
        #
        # hostname: sets the hostname in the cloud-init config for this machine
        hostname: salt
        #
        # os: sets the OS cloud-image to use when creating the machine
        os: fedora40
        #
        # disks: provides a list of disks to be created for the machine
        # TODO: We only support primary disk right now, additional disks to
        #   be a feature added once we have a more stable application.
        disks:
          # This name + size configuration combination overrides the default
          # size for the primary disk
          - name: primary
            size: 30G
        #
        # interfaces: a list of named interfaces to add to the machine
        # TODO: We only support the first interface on a machine right
        # now. A feature will be added to allow configuring multiple
        # NICs once we have a more stable application.
        interfaces:
          # The interface name/id should match what the OS will generate
          # for the interface. The value here does not dictate what the
          # interface is name but what interface to look for to configure.
          - name: eth0
            # IP addressing is handled via cloud-init
            ip4: 192.168.122.12/24
            ip4gw: 192.168.122.1
        #
        # cloud_init: The machine:cloud_init configuration is merged with
        # the config_defaults:cloud_init configuration to create the final
        # cloud_init config for a machine.
        cloud_init:
          # If you need a machine to ignore the cloud_init:runcmd commands
          # from the config_defaults set this flag to true
          runcmd_ignore_defaults: true
          runcmd:
            - curl --insecure https://vault.tkclabs.io:8200/v1/root_ca/ca/pem > /etc/pki/ca-trust/source/anchors/vault.tkclabs.io.crt
            - curl -s -o /root/bootstrap-salt.sh -L https://bootstrap.saltproject.io
            - chmod 0755 /root/bootstrap-salt.sh
            - /root/bootstrap-salt.sh -X -M -A 127.0.0.1 stable 3007
            # Salt master config customization
            - |
              cat << EOF > /etc/salt/master.d/cloud_init_master.conf
              # Auto-accept for the lab
              auto_accept: True

              EOF
            # Salt minion config customization
            - |
              cat << EOF > /etc/salt/minion.d/cloud_init_minion.conf
              # This reduces latency for some salt operations when reverse
              # DNS is not in place for the machine.
              enable_fqdns_grains: False

              EOF
            - systemctl enable --now salt-master
            - systemctl enable --now salt-minion
          # Mounts can be provided per-machine in cloud_init too
          # mounts:
          #   - [gitrepos, /srv/git, virtiofs, "ro,relatime"]

      # This machine uses the config_defaults:os value
      - vm_name: vault.local
        hostname: vault
        interfaces:
          - name: enp1s0
            ip4: 192.168.122.16/24
            ip4gw: 192.168.122.1
      - vm_name: jenkins.local
        hostname: jenkins
        interfaces:
          - name: enp1s0
            ip4: 192.168.122.18/24
            ip4gw: 192.168.122.1
      # A machine with an interface but no ip4 will get a DHCP addrss if the
      # selected Libvirt network supports DHCP.
      - vm_name: dhcpconfig.local
        hostname: dhcpconfig
        interfaces:
          - name: enp1s0

# images:
#   The images configuraiton object is a list of images to download and
#   validate for use in the environments defined within the Lvlab.yml config.
#
#   Images must support cloud-init configuration to function appropriately
#   with the lvlab application.
#
images:
  # Primary key of the image
  fedora40:
    # URL for downloading the cloud-image
    image_url: https://download.fedoraproject.org/pub/fedora/linux/releases/40/Cloud/x86_64/images/Fedora-Cloud-Base-Generic.x86_64-40-1.14.qcow2
    # URL for downloading the checksum file for the associated cloud-image
    checksum_url: https://download.fedoraproject.org/pub/fedora/linux/releases/40/Cloud/x86_64/images/Fedora-Cloud-40-1.14-x86_64-CHECKSUM
    # Type of checksums in that file
    checksum_type: sha256
    # The Fedora checksum file is released GPG signed, this is the URL of
    # the keyring that can be downloaded and used to verify that singature.
    checksum_url_gpg: https://fedoraproject.org/fedora.gpg
    # Each OS version runs a different version of cloud-init. Some  are newer
    # than others and work with cloud-init network-config version 2, others
    # require version 1. This variable lets us configure which network version
    # to use per image.
    network_version: 2
  debian12:
    image_url: https://cloud.debian.org/images/cloud/bookworm/20240717-1811/debian-12-generic-amd64-20240717-1811.qcow2
    checksum_url: https://cloud.debian.org/images/cloud/bookworm/20240717-1811/SHA512SUMS
    checksum_type: sha512
    network_version: 2
  debian11:
    image_url: https://cloud.debian.org/images/cloud/bullseye/20240717-1811/debian-11-generic-amd64-20240717-1811.qcow2
    checksum_url: https://cloud.debian.org/images/cloud/bullseye/20240717-1811/SHA512SUMS
    checksum_type: sha512
    network_version: 1
  debian10:
    image_url: https://cloud.debian.org/images/cloud/buster/20240703-1797/debian-10-generic-amd64-20240703-1797.qcow2
    checksum_url: https://cloud.debian.org/images/cloud/buster/20240703-1797/SHA512SUMS
    checksum_type: sha512
    network_version: 1
  # Checksum validation configuration on each image is not required but they
  # are recommended.
  NoValidate:
    image_url: https://cloud.debian.org/images/cloud/buster/20240703-1797/debian-10-generic-amd64-20240703-1797.qcow2
    network_version: 1
